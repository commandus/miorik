create tablespace MIORIC datafile 'C:\oraclexe\app\oracle\oradata\XE\mioric.dbf' size 20M reuse autoextend on next 20M;
SELECT tablespace_name, file_name, status, bytes FROM dba_data_files;
--DROP USER "MIORIC";
CREATE USER "MIORIC" 
DEFAULT TABLESPACE "MIORIC"
TEMPORARY TABLESPACE "TEMP"
ACCOUNT UNLOCK 
IDENTIFIED BY "masterkey";

ALTER USER "MIORIC" QUOTA UNLIMITED ON "MIORIC";

GRANT "ADM_PARALLEL_EXECUTE_TASK" TO "MIORIC";
GRANT "AQ_ADMINISTRATOR_ROLE" TO "MIORIC";
GRANT "DELETE_CATALOG_ROLE" TO "MIORIC";
GRANT "OEM_MONITOR" TO "MIORIC";
GRANT "XDB_WEBSERVICES" TO "MIORIC";
GRANT "HS_ADMIN_SELECT_ROLE" TO "MIORIC";
GRANT "EXECUTE_CATALOG_ROLE" TO "MIORIC";
GRANT "SCHEDULER_ADMIN" TO "MIORIC";
GRANT "DATAPUMP_IMP_FULL_DATABASE" TO "MIORIC";
GRANT "RESOURCE" TO "MIORIC";
GRANT "DATAPUMP_EXP_FULL_DATABASE" TO "MIORIC";
GRANT "AQ_USER_ROLE" TO "MIORIC";
GRANT "APEX_ADMINISTRATOR_ROLE" TO "MIORIC";
GRANT "SELECT_CATALOG_ROLE" TO "MIORIC";
GRANT "CTXAPP" TO "MIORIC";
GRANT "RECOVERY_CATALOG_OWNER" TO "MIORIC";
GRANT "GATHER_SYSTEM_STATISTICS" TO "MIORIC";
GRANT "DBA" TO "MIORIC";
GRANT "CONNECT" TO "MIORIC";
GRANT "AUTHENTICATEDUSER" TO "MIORIC";
GRANT "XDB_SET_INVOKER" TO "MIORIC";
GRANT "HS_ADMIN_EXECUTE_ROLE" TO "MIORIC";
GRANT "PLUSTRACE" TO "MIORIC";
GRANT "LOGSTDBY_ADMINISTRATOR" TO "MIORIC";
GRANT "XDB_WEBSERVICES_WITH_PUBLIC" TO "MIORIC";
GRANT "XDBADMIN" TO "MIORIC";
GRANT "XDB_WEBSERVICES_OVER_HTTP" TO "MIORIC";
GRANT "EXP_FULL_DATABASE" TO "MIORIC";
GRANT "IMP_FULL_DATABASE" TO "MIORIC";
GRANT "HS_ADMIN_ROLE" TO "MIORIC";
GRANT "DBFS_ROLE" TO "MIORIC";
GRANT "OEM_ADVISOR" TO "MIORIC";
COMMIT;


FUNCTION lsBuilding (
    dt0 TIMESTAMP,
    dt1 TIMESTAMP,
    whereclause VARCHAR2
  ) RETURN V_STORE.T_BUILDING
  AS
    c_v V_STORE.T_C;
    ret V_STORE.T_BUILDING := V_STORE.T_BUILDING();
    i NUMBER;
  BEGIN
    c_v := v_store.lsitemcursor (2, dt0, dt1, whereclause);
    i := 1;
    LOOP
      ret.extend;
      FETCH c_v INTO ret(i)."id";
      EXIT WHEN c_v%NOTFOUND;
      ret(i):= getBuilding(ret(i)."id", dt0, dt1);
      i := i + 1;
    END LOOP;    
    close c_V;
    RETURN ret;
  END;
